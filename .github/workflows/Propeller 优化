name: Generate Propeller Profile
on:
  workflow_dispatch:
    inputs:
      VMLINUX_PATH:
        description: "vmlinux 文件路径（对应于您的 kernel.afdo）"
        required: true
        default: "./vmlinux"
      PERF_DATA_PATH:
        description: "perf.data 文件路径"
        required: true
        default: "./perf.data"
      PROPELLER_PROFILE_PREFIX:
        description: "Propeller 配置文件前缀"
        required: true
        default: "propeller_profile"

jobs:
  generate_profile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup LLVM and Clang (Requires LLVM 19+)
        run: |
          # 实际环境中，您可能需要添加 PPA 或从源代码构建来获取 LLVM 19+。
          # 这里仅作示例，假设系统已提供或您有其他方式安装。
          sudo apt-get update
          sudo apt-get install -y clang-19 lld-19
          echo "PATH=/usr/lib/llvm-19/bin:$PATH" >> $GITHUB_ENV
          echo "CC=clang-19" >> $GITHUB_ENV
          echo "CXX=clang++-19" >> $GITHUB_ENV

      - name: Install AutoFDO tools (create_llvm_prof)
        run: |
          # 克隆 AutoFDO 仓库并构建 create_llvm_prof
          # 使用您提供的 afdo 仓库链接
          git clone https://github.com/3620603660/afdo.git autofdo_custom
          cd autofdo_custom
          # 如果需要特定版本，请取消注释并指定
          # git checkout v0.30.1 
          mkdir build && cd build
          cmake ..
          make -j$(nproc)
          echo "$GITHUB_WORKSPACE/autofdo_custom/build:$PATH" >> $GITHUB_ENV

      - name: Prepare vmlinux and perf.data
        run: |
          # 如果您的 vmlinux 和 perf.data 是通过 actions/upload-artifact 上传的，
          # 您需要在这里使用 actions/download-artifact 来下载它们。
          # 例如：
          # - name: Download vmlinux artifact
          #   uses: actions/download-artifact@v3
          #   with:
          #     name: vmlinux-artifact
          #     path: .
          # - name: Download perf.data artifact
          #   uses: actions/download-artifact@v3
          #   with:
          #     name: perf-data-artifact
          #     path: .
          
          # 确保 vmlinux 和 perf.data 文件存在于指定路径
          if [ ! -f "${{ github.event.inputs.VMLINUX_PATH }}" ]; then
            echo "Error: vmlinux file not found at ${{ github.event.inputs.VMLINUX_PATH }}"
            exit 1
          fi
          if [ ! -f "${{ github.event.inputs.PERF_DATA_PATH }}" ]; then
            echo "Error: perf.data file not found at ${{ github.event.inputs.PERF_DATA_PATH }}"
            exit 1
          fi
          echo "vmlinux and perf.data are ready."

      - name: Generate Propeller Profiles
        run: |
          # 确保 vmlinux 文件是完整的，并且 perf.data 包含有效的性能数据。
          # create_llvm_prof 的具体参数可能需要根据您的 perf 数据和内核版本进行调整。
          create_llvm_prof \
            --binary=${{ github.event.inputs.VMLINUX_PATH }} \
            --profile=${{ github.event.inputs.PERF_DATA_PATH }} \
            --format=propeller \
            --propeller_output_module_name \
            --out=${{ github.event.inputs.PROPELLER_PROFILE_PREFIX }}_cc_profile.txt \
            --propeller_symorder=${{ github.event.inputs.PROPELLER_PROFILE_PREFIX }}_ld_profile.txt
          echo "✅ Propeller 配置文件生成完成"

      - name: Upload Propeller Profiles
        uses: actions/upload-artifact@v3
        with:
          name: propeller-profiles
          path: |
            ${{ github.event.inputs.PROPELLER_PROFILE_PREFIX }}_cc_profile.txt
            ${{ github.event.inputs.PROPELLER_PROFILE_PREFIX }}_ld_profile.txt